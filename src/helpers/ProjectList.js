
import image from '../assets/images/cat-mouse-Maze.png';
import grades from '../assets/images/grades.png';
import animal from '../assets/images/animal-sightings-app.jpg';
import sudoku from '../assets/images/sudoku.png';
import sfu from '../assets/images/sfu.png';
import python from '../assets/images/python-interp.png';


export const ProjectList = [
    {
        name: "Python Interpreter",
        image: python,
        skillsList: "C++, Object Oriented Programming, Data Structures",
        description: "The Python interpreter project developed in C++ is a powerful tool for running Python code on a computer. It is designed to optimize the performance of Python code by executing it more quickly and efficiently than other interpreters. The interpreter makes use of advanced data structures like hash-maps to efficiently manage data stored as variables. This means that the interpreter can retrieve, update, and delete data quickly, making it more responsive and easier to use. In addition, the interpreter includes error-handling capabilities that ensure that it can execute Python code smoothly and correctly, even when faced with unexpected input or syntax errors. This makes it a reliable tool for developers who need to test and debug their Python code.",
        skills: "During the development of the Python interpreter project in C++, I was able to hone several key skills. One of the most important skills I developed was the ability to optimize code for speed and memory efficiency. This involved identifying and addressing any bottlenecks that could negatively impact performance, and making necessary adjustments to improve the overall speed and efficiency of the interpreter. I also gained experience in utilizing advanced data structures such as hash-maps to efficiently manage data stored as variables. This helped to improve the overall performance of the interpreter by making it easier to retrieve, update, and delete data quickly. Additionally, I learned how to use C++ templates and object-oriented programming principles to write flexible and modular code that was easy to maintain and extend.",
        learned: "Through the development of the Python interpreter project in C++, I gained valuable experience in several areas. One of the most important things I learned was the importance of comprehensive testing and optimization. I discovered how to identify performance bottlenecks and make necessary adjustments to improve the speed and efficiency of the interpreter. Additionally, I learned how to implement error-handling capabilities to ensure that the interpreter could smoothly execute and handle any unexpected input or syntax errors. This helped to prevent the interpreter from crashing when faced with unexpected input and enabled it to provide useful feedback to the user. Finally, I learned how to use advanced data structures and object-oriented programming principles to write flexible and modular code that was easy to maintain and extend, which will undoubtedly be useful in future projects.",
        repoLink: "https://github.com/arshmann2003/CMPT213/tree/main/assignment4/WebMazeAppSpringBoot"
    },
    {
        name: "Sudoku Language App",
        image: sudoku,
        message:"(iterations & user stories on GitHub)",
        skillsList: "Java, Android Development",
        description: "This project is a Sudoku game with a language learning component. The game board is filled with either English or French words, and the user is presented with a pool of words in the opposing language to complete the puzzle. The application automatically converts the words into the corresponding language when placed in the correct cell. The game features different board sizes that correspond to separate difficulty levels, with smaller grids being easier. The application also has a feature that allows users to upload their own English-French pair of words to fill the grid or use automatic words generated from a database. The project was developed in Java by a team of 4 peers using Android Studio. We utilized Git for project management and version control and assigned different issues to team members, managing progress using project management tools. The application underwent testing and debugging to ensure optimal performance and user experience.",
        skills: "Working on the Sudoku language learning application allowed me to develop a range of technical and interpersonal skills. I gained experience in designing and implementing user interfaces and game logic using Java and Android Studio. Additionally, I learned how to collaborate effectively in a team of 4 peers, utilizing Git for project management and version control. Through assigning different issues to team members and tracking progress using project management tools, I developed my project management skills and learned how to work towards a common goal in a team setting. I also gained experience in testing and debugging, improving the application's performance and user experience by identifying and fixing issues.",
        learned: "Developing the Sudoku language learning application was a valuable learning experience. I learned the importance of designing user-friendly interfaces and implementing engaging game mechanics to ensure an enjoyable user experience. The process of testing and debugging taught me to pay attention to the details and to identify and fix problems in a timely manner. Additionally, working on this project helped me develop my project management skills, including task delegation, progress tracking, and communication. Finally, I gained experience working collaboratively with a team, learning to share ideas, solve problems, and support one another to achieve a common goal. These skills will be valuable assets in future projects, both individually and in a team setting. Overall, this project was a valuable learning experience that equipped me with a variety of technical and interpersonal skills that I can apply to future projects",
        repoLink: "https://github.com/arshmann2003/SudokuApp"
    },
    {
        name: "Cat Mouse Maze Game",
        image: image,
        skillsList: "Java, SpringBoot, JavaScript, HTML, CSS",
        description: "The Cat-Mouse Maze game is an interactive web application that provides players with a fun and challenging gaming experience. The game was built using Java with the SpringBoot framework, which provides a robust and scalable architecture for the backend of the application. With the help of SpringBoot, a Rest API was developed to store and retrieve information related to the game, such as the positions of the mouse and cat in the maze. The main objective of the game is to navigate the mouse through a maze while avoiding the cat. To achieve this, the application uses a modified version of the depth-first search maze generation algorithm to generate a valid maze. This algorithm ensures that there are no 2 by 2 cells in the grid and that every cell is reachable, providing a unique maze for each gameplay. The frontend and user interaction of the application were developed using JavaScript, HTML, and CSS. This allows for an intuitive and engaging user experience, with a responsive interface that adapts to different screen sizes. Players can use their keyboard or mouse to move the mouse around the maze while trying to avoid the cat. The game also features a scoring system that tracks the time taken to complete the maze and awards points accordingly.",
        skills: "The development of the Cat-Mouse Maze game using Java with the SpringBoot framework allowed me to develop a variety of skills. Firstly, I gained an in-depth understanding of Java programming and SpringBoot framework, which are essential skills for developing robust and scalable web applications. I also honed my skills in Rest API development, which involved creating endpoints to handle the storage and retrieval of game data. In addition, I was able to develop my skills in algorithm design and implementation, specifically in the modified version of the depth-first search maze generation algorithm. On the frontend, I developed my skills in JavaScript, HTML, and CSS, allowing me to create a responsive and engaging user interface. Finally, I gained experience in project management and collaboration, as the development of the game required working with a team to ensure the project's success. Overall, the development of the Cat-Mouse Maze game provided me with a well-rounded skill set that I can apply to future web application development projects.",
        learned: "The development of the Cat-Mouse Maze game using Java with the SpringBoot framework was a valuable learning experience for me. I learned how to design and develop web applications using a popular and powerful backend framework, SpringBoot. This allowed me to gain an understanding of how to structure a web application, handle requests and responses, and manage data using a Rest API. Additionally, I learned how to implement and modify complex algorithms to create unique game mechanics, such as the maze generation algorithm used in the game.",
        repoLink: "https://github.com/arshmann2003/CMPT213/tree/main/assignment4/WebMazeAppSpringBoot",
        demoLink: "https://github.com/arshmann2003/CMPT213/tree/main/assignment4/WebMazeAppSpringBoot"
    },
    {
        name: "SFU Course Offerings", 
        image: sfu,
        skillsList: "Java, SpringBoot, JavaScript, HTML, CSS",
        description: "The SFU Course Finder is a web application designed to help students easily explore all the courses offered at Simon Fraser University across all departments. The application is built with a user-friendly interface, using a combination of JavaScript, HTML, and CSS for the frontend, and Java with SpringBoot for the backend. The main goal of the SFU Course Finder is to help students explore course offerings for specific courses in all departments at SFU. With a powerful search engine, students can search for courses by department, course code, or keyword. The application has been designed to efficiently manipulate large amounts of data, so retrieval of course data is fast and efficient. One of the key features of the application is the ability to add watchers to specific courses. By adding a course to their watch list, students can stay up-to-date with any changes in enrollment sizes or offerings. Whenever a change is detected, the student will receive an alert notifying them of the update.",
        skills: "Java, SpringBoot, JavaScript, HTML, CSS",
        learned: "Through the development of the SFU Course Finder, I learned and developed a variety of skills. One of the main skills I developed was the ability to efficiently manipulate large amounts of data and store it in a way that allowed for fast and efficient retrieval. Additionally, I honed my skills in JavaScript, HTML, and CSS for the frontend, and Java with SpringBoot for the backend. This allowed me to create a user-friendly interface that was both intuitive and responsive. I also developed skills in software design, including creating efficient and modular code that could be easily maintained and updated. One of the most challenging aspects of developing the SFU Course Finder was creating the alert system that notified users of any changes to enrollment sizes or course offerings. This required me to develop skills in event-driven programming, as well as creating robust and reliable notification systems. Overall, developing the SFU Course Finder was a valuable learning experience that allowed me to develop a wide range of skills in software development, database management, and user interface design.",
        repoLink: "",
        demoLink: ""
    },
    {
        name: "Animal Sightings App",
        image: animal,
        skillsList: "Angular, Python, TypeScript, HTML, CSS,",
        description: "The animal sighting web app is a user-friendly and interactive Angular-based project that allows users to explore and discover animal sightings all around the world. The app provides a responsive and intuitive user interface that enables users to view all the animal sightings on a world map, filter sightings by location and species, and get detailed information about each sighting. One of the key features of the app is its ability to allow users to post their own animal sightings. Users can create a new sighting by selecting a location on the map, entering details about the animal, and uploading a photo. The app uses Leaflet to provide an interactive and dynamic map interface for selecting and viewing locations. To ensure the security and integrity of the data, the app requires a password for any deletion of a post. This adds an extra layer of security to the app and prevents unauthorized deletion of important data. The app uses Flask, a powerful and lightweight Python web framework, for backend storage of user data. Flask provides a flexible and scalable infrastructure for storing and retrieving user data, making it easy to manage and maintain the app's database.",
        skills: "The animal sighting web app project allowed me to develop my skills in various areas, including Angular development, Leaflet, Flask, database management, and project management. ",
        learned: "In Angular, I learned about the different Angular building blocks, such as components, services, and modules. I became proficient in using Angular CLI to generate and manage different Angular components and services, as well as to create routing for navigation. In Flask, I learned how to use the Python web framework to build a robust backend for the animal sighting web app project. In HTML and CSS, I learned how to structure and style the web pages of the animal sighting web app project. I gained expertise in creating semantic HTML elements and using CSS to apply different styling rules to the HTML elements. In Typescript, I learned how to use the statically typed superset of JavaScript to enhance the performance and maintainability of the Angular components and services. I became proficient in using different Typescript features such as classes, interfaces, and decorators to create reusable and maintainable code.",
        repoLink: ""
    }
]
